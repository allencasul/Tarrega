https://cordova.apache.org (Apache Cordova)



STEP# 1: Make sure to have all of these installed on your machine.
-------------------------------------
1. https://nodejs.org/en/
2. https://git-scm.com/downloads
3. https://www.oracle.com/ph/java/technologies/javase/javase8-archive-downloads.html
4. https://developer.android.com/studio
5. https://gradle.org/
5. Configure Environment Variables
   Watch the installation process bit.ly/3JX1aXa



STEP# 2: Apache Cordova Framework Installation via NPM
-------------------------------------
- npm install -g cordova



STEP# 3: Check if cordova requirements successfully installed by running the command below:
-------------------------------------
- cordova requirements android --verbose (Run this command inside the Lovelace folder)

(You should be seeing a message something like this)

Java JDK: installed 1.8.0
Android SDK: installed true
Android target: installed android-33,android-31,android-30,android-29
Gradle: installed C:\gradle-7.5.1\bin\gradle.BAT



STEP# 4: Adding Platform:
-------------------------------------
- cordova platform add cordova-electron



STEP# 5: Previewing your app
-------------------------------------
It is not necessary to build the Electron application for previewing. Since the building process can be slow, it is recommended to pass in the --nobuild flag to disable the build process when previewing.

- cordova run electron --nobuild



STEP# 6: Release (DevTools are shown by default on Debug Builds (without a flag or with --debug). If you want to hide the DevTools pass in the --release flag when building or running the application.)
-------------------------------------
- cordova run electron --release



STEP# 7: Building your app
-------------------------------------
- cordova build electron --release



Plugins
-------------------------------------
All browser-based plugins are usable with the Electron platform.

When adding a plugin, if the plugin supports both the electron and browser platform, the electron portion will be used. If the plugin misses electron but contains the browser implementation, it will fall back on the browser implementation.

Internally, Electron is using Chromium (Chrome) as its web view. Some plugins may have conditions written specifically for each different browser. In this case, it may affect the behavior of what is intended. Since Electron may support feature that the browser does not, these plugins would possibly need to be updated for the electron platform.



Read More: https://cordova.apache.org/docs/en/11.x/guide/platforms/electron/index.html